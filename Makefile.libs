# This file is part of Coccinelle, lincensed under the terms of the GPL v2.
# See copyright.txt in the Coccinelle source code for more information.
# The Coccinelle source code can be obtained at http://coccinelle.lip6.fr

#
# Static configuration of Ocaml libraries
# Add these libraries to the library list in configure in order to use them.
#
# Template:
# LOCAL_$lib     = modules to include when compiling $lib locally with bytecode ocaml
# LOCALOPT_$lib  = modules to include when compiling $lib locally with optimizing ocaml
# GLOBAL_$lib    = modules to include when using $lib globally with bytecode ocaml
# GLOBALOPT_$lib = modules to include when using $lib globally with optimizing ocaml
# FLAGS_$lib     = extra flags to pass to optimizing ocaml when using $lib at link time
#
# This file is included in the Makefile where these variables may be used depending
# on your actual configuration.
#


# *Note*
# Pay attention to the difference between -cclib and -ccopt: although the documentation
# of -ccopt suggest that it subsumes -cclib, be sure to use -cclib for library includes.
#
# *Note*
# the order in which library includes are specified matters!


# pyml library
LOCAL_pyml     = $(PYMLDIR)/pyml.cma
LOCALOPT_pyml  = $(PYMLDIR)/pyml.cmxa
GLOBAL_pyml    = $(PYMLDIR)/pyml.cma
GLOBALOPT_pyml = $(PYMLDIR)/pyml.cmxa
FLAGS_pyml     = $(CFLAGS_pyml:%=-ccopt %) -dllib -lpyml_stubs -cclib -lpyml_stubs
OPTFLAGS_pyml  = $(CFLAGS_pyml:%=-ccopt %) -cclib -lpyml_stubs

# pcre library
# Note: see the comment of the pycaml library about the double appearance of the stubs library.
LOCAL_pcre     = $(BYTESDIR:=/bytes.cma) $(PCREDIR)/pcre.cma
LOCALOPT_pcre  = $(BYTESDIR:=/bytes.cmxa) $(PCREDIR)/pcre.cmxa
GLOBAL_pcre    = $(BYTESDIR:=/bytes.cma) $(PCREDIR)/pcre.cma
GLOBALOPT_pcre = $(BYTESDIR:=/bytes.cmxa) $(PCREDIR)/pcre.cmxa
FLAGS_pcre     = \
	$(PCRE_LIBS:%=-ccopt %) -cclib -L$(PCREDIR) -dllib -lpcre_stubs \
	-cclib -lpcre_stubs
OPTFLAGS_pcre  = \
	$(PCRE_LIBS:%=-ccopt %) -cclib -L$(PCREDIR) -cclib -lpcre_stubs

# dynlink library
LOCAL_dynlink     =
LOCALOPT_dynlink  =
GLOBAL_dynlink    = $(DYNLINKDIR)/dynlink.cma
GLOBALOPT_dynlink = $(DYNLINKDIR)/dynlink.cmxa
FLAGS_dynlink     =
OPTFLAGS_dynlink  =

# type conv library
LOCAL_type_conv     = pa_type_conv.cma
LOCALOPT_type_conv  = pa_type_conv.cmxa
GLOBAL_type_conv    = pa_type_conv.cma
GLOBALOPT_type_conv = pa_type_conv.cma
FLAGS_type_conv     =
OPTFLAGS_type_conv  =

# parmap library
LOCAL_parmap     = $(PARMAPDIR)/parmap.cma
LOCALOPT_parmap  = $(PARMAPDIR)/parmap.cmxa
GLOBAL_parmap    = $(PARMAPDIR)/parmap.cma
GLOBALOPT_parmap = $(PARMAPDIR)/parmap.cmxa
FLAGS_parmap     = -cclib -lparmap_stubs
OPTFLAGS_parmap  = -cclib -lparmap_stubs
