module type S = sig
@BEGIN_FROM_4_08_0@
type 'a t = 'a array
@END_FROM_4_08_0@
@BEGIN_BEFORE_4_08_0@
type 'a t = 'a array
@END_BEFORE_4_08_0@
(** @since 4.08.0: type 'a t = 'a array
 *)

@BEGIN_FROM_4_06_0@
module Floatarray = Array.Floatarray
@END_FROM_4_06_0@
@BEGIN_BEFORE_4_06_0@
module Floatarray :
sig
  val create : int -> Stdcompat__init.floatarray
  val length : Stdcompat__init.floatarray -> int
  val get : Stdcompat__init.floatarray -> int -> float
  val set : Stdcompat__init.floatarray -> int -> float -> unit
  val unsafe_get : Stdcompat__init.floatarray -> int -> float
  val unsafe_set : Stdcompat__init.floatarray -> int -> float -> unit
end
@END_BEFORE_4_06_0@
(** @since 4.06.0: module Floatarray = Array.Floatarray
 *)

@BEGIN_FROM_4_07_0@
val to_seq : 'a array -> 'a Seq.t
@END_FROM_4_07_0@
@BEGIN_BEFORE_4_07_0@
val to_seq : 'a array -> 'a Stdcompat__seq.t
@END_BEFORE_4_07_0@
(** @since 4.07.0: val to_seq : 'a array -> 'a Seq.t
 *)

@BEGIN_FROM_4_07_0@
val to_seqi : 'a array -> (int * 'a) Seq.t
@END_FROM_4_07_0@
@BEGIN_BEFORE_4_07_0@
val to_seqi : 'a array -> (int * 'a) Stdcompat__seq.t
@END_BEFORE_4_07_0@
(** @since 4.07.0: val to_seqi : 'a array -> (int * 'a) Seq.t
 *)

@BEGIN_FROM_4_07_0@
val of_seq : 'a Seq.t -> 'a array
@END_FROM_4_07_0@
@BEGIN_BEFORE_4_07_0@
val of_seq : 'a Stdcompat__seq.t -> 'a array
@END_BEFORE_4_07_0@
(** @since 4.07.0: val of_seq : 'a Seq.t -> 'a array
 *)

@BEGIN_FROM_4_03_0@
external create_float : int -> float array = "caml_make_float_vect"
@END_FROM_4_03_0@
@BEGIN_BEFORE_4_03_0@
val create_float : int -> float array
@END_BEFORE_4_03_0@
(** @since 4.03.0:
    external create_float : int -> float array = "caml_make_float_vect"
 *)

val iter2 : ('a -> 'b -> unit) -> 'a array -> 'b array -> unit
(** @since 4.03.0:
    val iter2 : ('a -> 'b -> unit) -> 'a array -> 'b array -> unit *)

val map2 : ('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array
(** @since 4.03.0:
    val map2 : ('a -> 'b -> 'c) -> 'a array -> 'b array -> 'c array *)

val for_all : ('a -> bool) -> 'a array -> bool
(** @since 4.03.0: val for_all : ('a -> bool) -> 'a array -> bool *)

val exists : ('a -> bool) -> 'a array -> bool
(** @since 4.03.0: val exists : ('a -> bool) -> 'a array -> bool *)

val mem : 'a -> 'a array -> bool
(** @since 4.03.0: val mem : 'a -> 'a array -> bool *)

val memq : 'a -> 'a array -> bool
(** @since 4.03.0: val memq : 'a -> 'a array -> bool *)

@BEGIN_FROM_4_08_0@
val make_float : int -> float array
@END_FROM_4_08_0@
@BEGIN_BEFORE_4_08_0@
@BEGIN_FROM_4_03_0@
val make_float : int -> float array[@@ocaml.deprecated
                                     "Use Array.create_float instead."]
@END_FROM_4_03_0@
@BEGIN_BEFORE_4_03_0@
@BEGIN_FROM_4_02_0@
external make_float : int -> float array = "caml_make_float_vect"
@END_FROM_4_02_0@
@BEGIN_BEFORE_4_02_0@
val make_float : int -> float array
@END_BEFORE_4_02_0@

@END_BEFORE_4_03_0@

@END_BEFORE_4_08_0@
(** @since 4.08.0: val make_float : int -> float array
@since 4.03.0:
val make_float : int -> float array[@@ocaml.deprecated
                                     "Use Array.create_float instead."]
@since 4.02.0:
external make_float : int -> float array = "caml_make_float_vect"
 *)

external length : 'a array -> int = "%array_length"
(** Alias for {!Array.length} *)

external get : 'a array -> int -> 'a = "%array_safe_get"
(** Alias for {!Array.get} *)

external set : 'a array -> int -> 'a -> unit = "%array_safe_set"
(** Alias for {!Array.set} *)

@BEGIN_FROM_3_08_0@
external make : int -> 'a -> 'a array = "caml_make_vect"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external make : int -> 'a -> 'a array = "make_vect"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external make : int -> 'a -> 'a array = "caml_make_vect"
@since 3.07.0: external make : int -> 'a -> 'a array = "make_vect"
 *)

@BEGIN_FROM_4_08_0@
external create : int -> 'a -> 'a array = "caml_make_vect"
@END_FROM_4_08_0@
@BEGIN_BEFORE_4_08_0@
@BEGIN_FROM_4_02_0@
external create : int -> 'a -> 'a array = "caml_make_vect"[@@ocaml.deprecated
                                                            "Use Array.make instead."]
@END_FROM_4_02_0@
@BEGIN_BEFORE_4_02_0@
@BEGIN_FROM_3_08_0@
external create : int -> 'a -> 'a array = "caml_make_vect"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external create : int -> 'a -> 'a array = "make_vect"
@END_BEFORE_3_08_0@

@END_BEFORE_4_02_0@

@END_BEFORE_4_08_0@
(** @since 4.08.0: external create : int -> 'a -> 'a array = "caml_make_vect"
@since 4.02.0:
external create : int -> 'a -> 'a array = "caml_make_vect"[@@ocaml.deprecated
                                                            "Use Array.make instead."]
@since 3.08.0: external create : int -> 'a -> 'a array = "caml_make_vect"
@since 3.07.0: external create : int -> 'a -> 'a array = "make_vect"
 *)

val init : int -> (int -> 'a) -> 'a array
(** Alias for {!Array.init} *)

val make_matrix : int -> int -> 'a -> 'a array array
(** Alias for {!Array.make_matrix} *)

@BEGIN_FROM_4_08_0@
val create_matrix : int -> int -> 'a -> 'a array array
@END_FROM_4_08_0@
@BEGIN_BEFORE_4_08_0@
@BEGIN_FROM_4_02_0@
val create_matrix : int -> int -> 'a -> 'a array array[@@ocaml.deprecated
                                                        "Use Array.make_matrix instead."]
@END_FROM_4_02_0@
@BEGIN_BEFORE_4_02_0@
val create_matrix : int -> int -> 'a -> 'a array array
@END_BEFORE_4_02_0@

@END_BEFORE_4_08_0@
(** @since 4.08.0: val create_matrix : int -> int -> 'a -> 'a array array
@since 4.02.0:
val create_matrix : int -> int -> 'a -> 'a array array[@@ocaml.deprecated
                                                        "Use Array.make_matrix instead."]
@since 3.07.0: val create_matrix : int -> int -> 'a -> 'a array array
 *)

val append : 'a array -> 'a array -> 'a array
(** Alias for {!Array.append} *)

val concat : 'a array list -> 'a array
(** Alias for {!Array.concat} *)

val sub : 'a array -> int -> int -> 'a array
(** Alias for {!Array.sub} *)

val copy : 'a array -> 'a array
(** Alias for {!Array.copy} *)

val fill : 'a array -> int -> int -> 'a -> unit
(** Alias for {!Array.fill} *)

val blit : 'a array -> int -> 'a array -> int -> int -> unit
(** Alias for {!Array.blit} *)

val to_list : 'a array -> 'a list
(** Alias for {!Array.to_list} *)

val of_list : 'a list -> 'a array
(** Alias for {!Array.of_list} *)

val iter : ('a -> unit) -> 'a array -> unit
(** Alias for {!Array.iter} *)

val iteri : (int -> 'a -> unit) -> 'a array -> unit
(** Alias for {!Array.iteri} *)

val map : ('a -> 'b) -> 'a array -> 'b array
(** Alias for {!Array.map} *)

val mapi : (int -> 'a -> 'b) -> 'a array -> 'b array
(** Alias for {!Array.mapi} *)

val fold_left : ('a -> 'b -> 'a) -> 'a -> 'b array -> 'a
(** Alias for {!Array.fold_left} *)

@BEGIN_FROM_4_00_0@
val fold_right : ('b -> 'a -> 'a) -> 'b array -> 'a -> 'a
@END_FROM_4_00_0@
@BEGIN_BEFORE_4_00_0@
val fold_right : ('a -> 'b -> 'b) -> 'a array -> 'b -> 'b
@END_BEFORE_4_00_0@
(** @since 4.00.0: val fold_right : ('b -> 'a -> 'a) -> 'b array -> 'a -> 'a
@since 3.07.0: val fold_right : ('a -> 'b -> 'b) -> 'a array -> 'b -> 'b
 *)

val sort : ('a -> 'a -> int) -> 'a array -> unit
(** Alias for {!Array.sort} *)

val stable_sort : ('a -> 'a -> int) -> 'a array -> unit
(** Alias for {!Array.stable_sort} *)

val fast_sort : ('a -> 'a -> int) -> 'a array -> unit
(** Alias for {!Array.fast_sort} *)

external unsafe_get : 'a array -> int -> 'a = "%array_unsafe_get"
(** Alias for {!Array.unsafe_get} *)

external unsafe_set : 'a array -> int -> 'a -> unit = "%array_unsafe_set"
(** Alias for {!Array.unsafe_set} *)

end
